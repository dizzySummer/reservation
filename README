
Update:

create database

1.Start add data from employer, click is employer selection. Otherwise the created user will not have employer permission
2. then nurse, rn means registered nurse, pn indicated practical nurse and AS is assistant
3. Then add data on dressbook
4. CustomUser meanly add admin and staff
5. Shift if pubished, the authenticated users(staff, nurses, admins) will see those job vacancies list and details
6. when adding shifts, status would be open, employee is null, after potentail employee viewed the job and reserved it,  then job status will be shown as reserved. 

7. After job reserved, it will redirect to reserved shifts list view, which list all shift that reserved by that nurse. 



#Quick start

$ mkdir reservation
$ cd reservation
$ python3 -m venv myvenv
$ source myvenv/bin/activate

##install django before that make sure pip is update

~$ python3 -m pip install --upgrade pip

(myvenv) ~$ pip3 install -r requirements.txt

~$ git init

~$ django-admin startproject reservation .

~$ pip3 install python-decouple

~$ pip3 install python_extensions

~$ python3 manage.py runserver

~$ python3 manage.py migrate

~$ pip3 freeze > requirements.txt

~$ python manage.py startapp core

~$ deactivate

# restart 

$ source myvenv/bin/activate

//how store django secret keys in development and production
//or how to setup a django 4.0 proejct with Heroku and AWS S3



python3 manage.py runserver --settings=reservation.settings.prod

python3 manage.py runserver --settings=reservation.settings.dev


>python3 manage.py shell

>>> from django.contrib.auth import get_user_model
>>> User=get_user_model()
>>> User.objects.all()
<QuerySet [<CustomUser: admin@gmail.com>, <CustomUser: nurse1@gmail.com>, <CustomUser: hospital1@gmail.com>]>
>>> 

##### for allowing password reset email notifications, add authentication_backend part in settings. 
### add also auth_authentication.py in app 
### add email settings in base.py

